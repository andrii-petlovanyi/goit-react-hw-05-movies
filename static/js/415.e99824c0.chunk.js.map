{"version":3,"file":"static/js/415.e99824c0.chunk.js","mappings":"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","sources":["components/TrendFilmItem/TrendFilmItem.styled.js","components/TrendFilmItem/TrendFilmItem.jsx","components/TrendFilms/TrendFilms.styled.js","components/TrendFilms/TrendFilms.jsx","pages/Home.jsx","service/api/fetchFilms.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const FilmWrapper = styled.div`\n  position: relative;\n`;\n\nexport const FilmTitle = styled.h1`\n  text-decoration: none;\n  color: orange;\n  color: #eb9128;\n  text-align: center;\n  justify-content: center;\n  vertical-align: baseline;\n  align-items: center;\n  height: 70px;\n  padding: 0 10px;\n`;\n\nexport const FilmPoster = styled.img`\n  width: 100%;\n`;\n\nexport const Rating = styled.p`\n  color: orange;\n  position: absolute;\n  top: 0;\n  right: 0;\n  background-color: red;\n  color: white;\n  padding: 10px 15px;\n  font-size: 18px;\n`;\n","import PropTypes from 'prop-types';\n\nimport { contentURL } from 'service/api/fetchFilms';\nimport { FilmPoster, FilmTitle, Rating } from './TrendFilmItem.styled';\n\nexport const TrendFilmItem = ({ film }) => {\n  const { title, vote_average, poster_path } = film;\n  return (\n    <>\n      <FilmPoster\n        src={\n          poster_path\n            ? 'https://i.postimg.cc/MTBLYYMP/poster-not-available.jpg'\n            : contentURL + poster_path\n        }\n        alt={title}\n      />\n      <FilmTitle>{title}</FilmTitle>\n      {vote_average && <Rating>{vote_average.toFixed(1)}</Rating>}\n    </>\n  );\n};\n\nTrendFilmItem.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }),\n}.isRequired;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const List = styled.ul`\n  margin-top: 60px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  width: 380px;\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  background: rgba(176, 130, 171, 0.15);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(1px);\n  -webkit-backdrop-filter: blur(1px);\n  border-radius: 10px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n\n  display: flex;\n  flex-direction: column;\n  margin-right: 60px;\n  margin-bottom: 36px;\n  &:hover {\n    transform: scale(1.05);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { TrendFilmItem } from 'components/TrendFilmItem/TrendFilmItem';\nimport { Links, List, ListItem } from './TrendFilms.styled';\n\nexport const TrendFilms = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies?.length > 0 && (\n        <List>\n          {movies.map(film => (\n            <ListItem key={film.id}>\n              <Links to={`/movie/${film.id}`} state={{ from: location }}>\n                <TrendFilmItem film={film} />\n              </Links>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nTrendFilms.propTypes = {\n  movies: PropTypes.array,\n};\n","import { useState } from 'react';\nimport { useEffect } from 'react';\n\nimport { fetchTrendFilms } from 'service/api/fetchFilms';\n\nimport { TrendFilms } from 'components/TrendFilms/TrendFilms';\n\nconst Home = () => {\n  const [films, setFilms] = useState([]);\n\n  useEffect(() => {\n    async function getTrendFilm() {\n      try {\n        const { data } = await fetchTrendFilms();\n        setFilms(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getTrendFilm();\n  }, []);\n\n  return <main>{films.length > 0 && <TrendFilms movies={films} />}</main>;\n};\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = '07f482c2b5e827c5b265fd8211004d21';\nconst LANGUAGE = 'uk';\n\nexport const contentURL = 'https://image.tmdb.org/t/p/w500';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function fetchTrendFilms(page = 1) {\n  try {\n    const response = await instance.get(\n      `/trending/movie/week?api_key=${KEY}&page=${page}&language=uk`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchSearchFilms(searchQuery, page = 1) {\n  try {\n    const response = await instance.get(\n      `/search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}&language=${LANGUAGE}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchInfoAboutFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}?api_key=${KEY}&language=${LANGUAGE}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCreditsFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}/credits?api_key=${KEY}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchReviewsFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}/reviews?api_key=${KEY}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["FilmTitle","styled","FilmPoster","Rating","TrendFilmItem","film","title","vote_average","poster_path","src","contentURL","alt","toFixed","Links","Link","List","ListItem","TrendFilms","movies","location","useLocation","length","map","to","id","state","from","useState","films","setFilms","useEffect","fetchTrendFilms","data","results","console","log","getTrendFilm","KEY","LANGUAGE","instance","axios","baseURL","page","get","response","status","Error","statusText","fetchSearchFilms","searchQuery","fetchInfoAboutFilm","idFilm","fetchCreditsFilm","fetchReviewsFilm"],"sourceRoot":""}