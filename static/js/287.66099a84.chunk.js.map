{"version":3,"file":"static/js/287.66099a84.chunk.js","mappings":"2LAeaA,GAAMC,EAAAA,EAAAA,GAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,0GCxBWC,EAAYZ,EAAAA,EAAAA,GAAH,oEAITa,EAAab,EAAAA,EAAAA,IAAH,wCAIVc,EAASd,EAAAA,EAAAA,EAAH,0C,SCLNe,EAAgB,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACtBC,EAAqCD,EAArCC,MAAOC,EAA8BF,EAA9BE,aAAcC,EAAgBH,EAAhBG,YAC7B,OACE,iCACE,SAACP,EAAD,UAAYK,KACZ,SAACJ,EAAD,CACEO,IACkB,OAAhBD,EACI,yDACAE,EAAAA,GAAaF,EAEnBG,IAAKL,KAEP,SAACH,EAAD,UAASI,EAAaK,QAAQ,OAGnC,E,QClBYC,GAAQxB,EAAAA,EAAAA,GAAOyB,EAAAA,GAAPzB,CAAH,kDAIL0B,EAAO1B,EAAAA,EAAAA,GAAH,+GAOJ2B,EAAW3B,EAAAA,EAAAA,GAAH,otBCRR4B,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,+BACS,OAANF,QAAM,IAANA,OAAA,EAAAA,EAAQG,QAAS,IAChB,SAACN,EAAD,UACGG,EAAOI,KAAI,SAAAjB,GAAI,OACd,SAACW,EAAD,WACE,SAACH,EAAD,CAAOU,GAAE,iBAAYlB,EAAKmB,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,UACE,SAACf,EAAD,CAAeC,KAAMA,OAFVA,EAAKmB,GADN,OAWzB,C,oMCpBYG,EAAOtC,EAAAA,EAAAA,KAAH,4MAUJuC,EAAQvC,EAAAA,EAAAA,MAAH,uXAgBLwC,EAASxC,EAAAA,EAAAA,OAAH,kjBAwBNyC,GAAazC,EAAAA,EAAAA,GAAO0C,EAAAA,IAAP1C,CAAH,uFAMV2C,EAAY3C,EAAAA,EAAAA,EAAH,sG,kBCJtB,EAjDkB,SAAC,GAAmB,IAAD,EAAhB4C,EAAgB,EAAhBA,UACnB,GAKIC,EAAAA,EAAAA,IAAQ,CAAEC,cAAe,CAAEC,OAAQ,MAJrCC,EADF,EACEA,SACAC,EAFF,EAEEA,aACAC,EAHF,EAGEA,MACaC,EAJf,EAIEC,UAAaD,OAGf,GAAwCE,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAA4BC,EAAAA,EAAAA,WAAS,kCAAMF,EAAaG,IAAI,gBAAvB,QAAmC,EAAnC,IAArC,eAAOV,EAAP,KAAeW,EAAf,KAuBA,OAfAC,EAAAA,EAAAA,YAAU,WAAM,wCAGd,WAA8BZ,GAA9B,mGAE2Ba,EAAAA,EAAAA,IAAiBb,GAF5C,gBAEYc,EAFZ,EAEYA,KACRjB,EAAUiB,EAAKC,SACfC,QAAQC,IAAIH,EAAKC,SAJrB,gDAMIC,QAAQC,IAAR,MANJ,yDAHc,wBACTjB,GADS,oCAYdkB,CAAelB,EAChB,GAAE,CAACA,EAAQH,KAGV,UAAC7C,EAAA,EAAD,CAAKmE,QAAQ,OAAOC,OAAO,OAAOC,MAAM,OAAxC,WACE,UAAC9B,EAAD,CAAM+B,SAAUpB,GAvBH,SAAC,GAAgB,IAAdF,EAAa,EAAbA,OAClBW,EAAUX,GACVQ,EAAgB,CAAEe,MAAOvB,IACzBG,GACD,IAmB2CqB,aAAa,MAArD,WACE,SAAChC,GAAD,kBACMS,EAAS,SAAU,CAAEwB,SAAU,4BADrC,IAEEC,YAAY,uBACZC,WAAS,MAEX,SAAClC,EAAD,CAAQmC,KAAK,SAAb,UACE,SAAClC,EAAD,UAGJ,SAACE,EAAD,oBAAYQ,EAAOJ,cAAnB,aAAY,EAAe6B,YAGhC,ECvCD,EAVc,WACZ,OAA4BpB,EAAAA,EAAAA,UAAS,MAArC,eAAO3B,EAAP,KAAee,EAAf,KACA,OACE,gCACE,SAAC,EAAD,CAAWA,UAAWA,IACrBf,IAAU,SAACD,EAAA,EAAD,CAAYC,OAAQA,MAGpC,C,uNCXKgD,EAAM,mCACNC,EAAW,KAEJzD,EAAa,kCAEpB0D,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAS,iCAGJ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,yGAA+BC,EAA/B,+BAAsC,EAAtC,kBAEoBJ,EAAStB,IAAT,uCACWoB,EADX,iBACuBM,EADvB,iBAFpB,UAKqB,OAHlBC,EAFH,QAKUC,OALV,yCAKiCD,GALjC,aAMG,IAAIE,MAAMF,EAASG,YANtB,kCAQHxB,QAAQC,IAAR,MARG,kFAYA,SAAeJ,EAAtB,+CAAO,OAAP,oBAAO,WAAgC4B,GAAhC,4FAA6CL,EAA7C,+BAAoD,EAApD,kBAEoBJ,EAAStB,IAAT,gCACIoB,EADJ,kBACiBW,EADjB,iBACqCL,EADrC,qBACsDL,IAH1E,UAKqB,OAHlBM,EAFH,QAKUC,OALV,yCAKiCD,GALjC,aAMG,IAAIE,MAAMF,EAASG,YANtB,kCAQHxB,QAAQC,IAAR,MARG,kFAYA,SAAeyB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,gGAEoBX,EAAStB,IAAT,iBACXiC,EADW,oBACOb,EADP,qBACuBC,IAH3C,UAKqB,OAHlBM,EAFH,QAKUC,OALV,yCAKiCD,GALjC,aAMG,IAAIE,MAAMF,EAASG,YANtB,gCAQHxB,QAAQC,IAAR,MARG,gFAYA,SAAe2B,EAAtB,+CAAO,OAAP,oBAAO,WAAgCD,GAAhC,gGAEoBX,EAAStB,IAAT,iBACXiC,EADW,4BACeb,IAHnC,UAKqB,OAHlBO,EAFH,QAKUC,OALV,yCAKiCD,GALjC,aAMG,IAAIE,MAAMF,EAASG,YANtB,gCAQHxB,QAAQC,IAAR,MARG,gFAYA,SAAe4B,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,gGAEoBX,EAAStB,IAAT,iBACXiC,EADW,4BACeb,IAHnC,UAKqB,OAHlBO,EAFH,QAKUC,OALV,yCAKiCD,GALjC,aAMG,IAAIE,MAAMF,EAASG,YANtB,gCAQHxB,QAAQC,IAAR,MARG,gF","sources":["components/Box.jsx","components/TrendFilmItem/TrendFilmItem.styled.js","components/TrendFilmItem/TrendFilmItem.jsx","components/TrendFilms/TrendFilms.styled.js","components/TrendFilms/TrendFilms.jsx","components/SearchBar/SearchBar.styled.js","components/SearchBar/SearchBar.jsx","pages/Movie.jsx","service/api/fetchFilms.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  fontFamily,\n  border,\n  shadow,\n  margin,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  margin,\n  flexbox,\n  fontFamily,\n  grid,\n  background,\n  border,\n  shadow,\n  position\n);\n","import styled from '@emotion/styled';\n\nexport const FilmTitle = styled.h1`\n  text-decoration: none;\n  color: orange;\n`;\nexport const FilmPoster = styled.img`\n  width: 100%;\n`;\n\nexport const Rating = styled.p`\n  color: orange;\n`;\n","import PropTypes from 'prop-types';\n\nimport { contentURL } from 'service/api/fetchFilms';\nimport { FilmPoster, FilmTitle, Rating } from './TrendFilmItem.styled';\n\nexport const TrendFilmItem = ({ film }) => {\n  const { title, vote_average, poster_path } = film;\n  return (\n    <>\n      <FilmTitle>{title}</FilmTitle>\n      <FilmPoster\n        src={\n          poster_path === null\n            ? 'https://i.postimg.cc/MTBLYYMP/poster-not-available.jpg'\n            : contentURL + poster_path\n        }\n        alt={title}\n      />\n      <Rating>{vote_average.toFixed(1)}</Rating>\n    </>\n  );\n};\n\nTrendFilmItem.propTypes = {\n  film: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    vote_average: PropTypes.string.isRequired,\n    poster_path: PropTypes.string,\n  }),\n}.isRequired;\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const Links = styled(Link)`\n  text-decoration: none;\n`;\n\nexport const List = styled.ul`\n  margin-top: 60px;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n\nexport const ListItem = styled.li`\n  width: 380px;\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  box-shadow: 7px 7px 34px -5px rgba(0, 0, 0, 0.75);\n  -webkit-box-shadow: 7px 7px 34px -5px rgba(0, 0, 0, 0.75);\n  -moz-box-shadow: 7px 7px 34px -5px rgba(0, 0, 0, 0.75);\n  padding: 6px;\n  display: flex;\n  flex-direction: column;\n  margin-right: 60px;\n  margin-bottom: 36px;\n  background: rgba(255, 255, 255, 0.178);\n  -webkit-backdrop-filter: blur(10px);\n  backdrop-filter: blur(10px);\n  border: 1px solid rgba(255, 255, 255, 0.075);\n  border-radius: 20px;\n  &:hover {\n    transform: scale(1.05);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport { TrendFilmItem } from 'components/TrendFilmItem/TrendFilmItem';\nimport { Links, List, ListItem } from './TrendFilms.styled';\n\nexport const TrendFilms = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <>\n      {movies?.length > 0 && (\n        <List>\n          {movies.map(film => (\n            <ListItem key={film.id}>\n              <Links to={`/movie/${film.id}`} state={{ from: location }}>\n                <TrendFilmItem film={film} />\n              </Links>\n            </ListItem>\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nTrendFilms.propTypes = {\n  movies: PropTypes.array,\n};\n","import styled from '@emotion/styled';\n\nimport { BiSearchAlt } from 'react-icons/bi';\n\nexport const Form = styled.form`\n  margin-left: 15px;\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 65px;\n  border-bottom: 4px solid RGBA(0, 8, 0, 0.1);\n`;\n\nexport const Input = styled.input`\n  margin-right: 5px;\n  border: 1px solid RGBA(255, 255, 0, 0.08);\n  border-radius: 4px;\n  height: 41px;\n  width: 300px;\n  padding-left: 15px;\n  color: RGBA(0, 8, 0, 0.68);\n  font-size: 20px;\n  font-weight: 500;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  &:focus {\n    outline: 3px solid RGBA(255, 255, 0, 0.4);\n  }\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  top: 24%;\n  left: 85%;\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  border: none;\n  outline: none;\n  background: transparent;\n  cursor: pointer;\n  &:focus {\n    transform: scale(1.1);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    border: none;\n    outline: none;\n  }\n  &:hover {\n    transform: scale(1.1);\n    transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n    border: none;\n    outline: none;\n  }\n`;\n\nexport const IconSearch = styled(BiSearchAlt)`\n  width: 32px;\n  height: 32px;\n  fill: RGBA(0, 8, 0, 0.68);\n`;\n\nexport const ErrorText = styled.p`\n  font-size: 16px;\n  font-weight: 500;\n  margin-left: 10px;\n  color: red;\n`;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { Box } from 'components/Box';\nimport { Button, ErrorText, Form, IconSearch, Input } from './SearchBar.styled';\nimport { fetchSearchFilms } from 'service/api/fetchFilms';\n\nconst SearchBar = ({ setMovies }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({ defaultValues: { search: '' } });\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [search, setSearch] = useState(() => searchParams.get('query') ?? ''); // () => searchParams.get('query') ?? ''\n\n  const onSubmit = ({ search }) => {\n    setSearch(search);\n    setSearchParams({ query: search });\n    reset();\n  };\n\n  useEffect(() => {\n    if (!search) return;\n\n    async function getFilmsByName(search) {\n      try {\n        const { data } = await fetchSearchFilms(search);\n        setMovies(data.results);\n        console.log(data.results);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFilmsByName(search);\n  }, [search, setMovies]); //[search, setMovies]\n\n  return (\n    <Box display=\"flex\" height=\"65px\" width=\"100%\">\n      <Form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Input\n          {...register('search', { required: 'This field is required' })}\n          placeholder=\"Search movie by name\"\n          autoFocus\n        />\n        <Button type=\"submit\">\n          <IconSearch />\n        </Button>\n      </Form>\n      <ErrorText>{errors.search?.message}</ErrorText>\n    </Box>\n  );\n};\n\nexport default SearchBar;\n","import { useState } from 'react';\n\nimport { TrendFilms } from 'components/TrendFilms/TrendFilms';\nimport SearchBar from 'components/SearchBar/SearchBar';\n\nconst Movie = () => {\n  const [movies, setMovies] = useState(null);\n  return (\n    <section>\n      <SearchBar setMovies={setMovies} />\n      {movies && <TrendFilms movies={movies} />}\n    </section>\n  );\n};\n\nexport default Movie;\n","import axios from 'axios';\n\nconst KEY = '07f482c2b5e827c5b265fd8211004d21';\nconst LANGUAGE = 'uk';\n\nexport const contentURL = 'https://image.tmdb.org/t/p/w500';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function fetchTrendFilms(page = 1) {\n  try {\n    const response = await instance.get(\n      `/trending/movie/week?api_key=${KEY}&page=${page}&language=uk`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchSearchFilms(searchQuery, page = 1) {\n  try {\n    const response = await instance.get(\n      `/search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}&language=${LANGUAGE}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchInfoAboutFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}?api_key=${KEY}&language=${LANGUAGE}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCreditsFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}/credits?api_key=${KEY}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchReviewsFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}/reviews?api_key=${KEY}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Box","styled","color","space","layout","margin","flexbox","fontFamily","grid","background","border","shadow","position","FilmTitle","FilmPoster","Rating","TrendFilmItem","film","title","vote_average","poster_path","src","contentURL","alt","toFixed","Links","Link","List","ListItem","TrendFilms","movies","location","useLocation","length","map","to","id","state","from","Form","Input","Button","IconSearch","BiSearchAlt","ErrorText","setMovies","useForm","defaultValues","search","register","handleSubmit","reset","errors","formState","useSearchParams","searchParams","setSearchParams","useState","get","setSearch","useEffect","fetchSearchFilms","data","results","console","log","getFilmsByName","display","height","width","onSubmit","query","autoComplete","required","placeholder","autoFocus","type","message","KEY","LANGUAGE","instance","axios","baseURL","fetchTrendFilms","page","response","status","Error","statusText","searchQuery","fetchInfoAboutFilm","idFilm","fetchCreditsFilm","fetchReviewsFilm"],"sourceRoot":""}