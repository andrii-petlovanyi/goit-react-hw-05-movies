{"version":3,"file":"static/js/677.4e5c5e0b.chunk.js","mappings":"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","sources":["components/Box.jsx","components/CastItem/CastItem.styled.js","components/CastItem/CastItem.jsx","components/Cast/Cast.jsx","components/Cast/Cast.styled.js","service/api/fetchFilms.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport {\n  color,\n  space,\n  layout,\n  flexbox,\n  grid,\n  background,\n  fontFamily,\n  border,\n  shadow,\n  margin,\n  position,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  color,\n  space,\n  layout,\n  margin,\n  flexbox,\n  fontFamily,\n  grid,\n  background,\n  border,\n  shadow,\n  position\n);\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  width: 200px;\n  border: 1px solid rgba(255, 255, 255, 0.18);\n  border-radius: 5px;\n`;\n\nexport const PhotoAct = styled.img`\n  width: 200px;\n`;\n\nexport const CastLabel = styled.p`\n  padding: 0 10px;\n  color: white;\n`;\n","import PropTypes from 'prop-types';\n\nimport { contentURL } from 'service/api/fetchFilms';\nimport { CastLabel, ListItem, PhotoAct } from './CastItem.styled';\n\nexport const CastItem = ({ cast = {} }) => {\n  const { character, name, profile_path } = cast;\n  return (\n    <>\n      <ListItem>\n        <PhotoAct\n          src={\n            profile_path\n              ? contentURL + profile_path\n              : 'https://dummyimage.com/200x300/8c898c/ffffff.jpg&text=Photo+not+available'\n          }\n          alt={`photo ${name}`}\n        />\n        <CastLabel>{name}</CastLabel>\n        <CastLabel>{character}</CastLabel>\n      </ListItem>\n    </>\n  );\n};\n\nCastItem.propTypes = {\n  cast: PropTypes.shape({\n    character: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    profile_path: PropTypes.string,\n  }),\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchCreditsFilm } from 'service/api/fetchFilms';\n\nimport { CastItem } from '../CastItem/CastItem';\nimport { Box } from '../Box';\nimport { CastList, CastTitle } from './Cast.styled';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [casts, setCasts] = useState([]);\n\n  useEffect(() => {\n    async function getCast(id) {\n      try {\n        const { data } = await fetchCreditsFilm(id);\n        setCasts(data.cast);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getCast(id);\n  }, [id]);\n\n  return (\n    <Box>\n      {!casts.length > 0 ? (\n        <CastTitle>No casts</CastTitle>\n      ) : (\n        <CastList>\n          {casts.map(cast => (\n            <CastItem key={cast.cast_id} cast={cast} />\n          ))}\n        </CastList>\n      )}\n    </Box>\n  );\n};\n\nexport default Cast;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  transform: scale(1);\n  cursor: pointer;\n  padding: 10px;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n  color: white;\n  background-color: #5e475c;\n  border: none;\n  border-radius: 10px 10px 0 0;\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  :hover {\n    /* transform: scale(1.05); */\n    color: #f2f2f2;\n    /* background-color: #91778e; */\n    background-color: #91778e;\n  }\n`;\n\nexport const Linked = styled(NavLink)`\n  cursor: default;\n  &.active {\n    color: #f1962e;\n\n    button {\n      color: white;\n      background-color: #8978a3;\n    }\n  }\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const CastTitle = styled.h1`\n  color: white;\n`;\n","import axios from 'axios';\n\nconst KEY = '07f482c2b5e827c5b265fd8211004d21';\nconst LANGUAGE = 'uk';\n\nexport const contentURL = 'https://image.tmdb.org/t/p/w500';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function fetchTrendFilms(page = 1) {\n  try {\n    const response = await instance.get(\n      `/trending/movie/week?api_key=${KEY}&page=${page}&language=uk`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchSearchFilms(searchQuery, page = 1) {\n  try {\n    const response = await instance.get(\n      `/search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}&language=${LANGUAGE}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchInfoAboutFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}?api_key=${KEY}&language=${LANGUAGE}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCreditsFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}/credits?api_key=${KEY}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchReviewsFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}/reviews?api_key=${KEY}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Box","styled","color","space","layout","margin","flexbox","fontFamily","grid","background","border","shadow","position","ListItem","PhotoAct","CastLabel","CastItem","cast","character","name","profile_path","src","contentURL","alt","id","useParams","useState","casts","setCasts","useEffect","fetchCreditsFilm","data","console","log","getCast","length","map","cast_id","Btn","Linked","NavLink","CastList","CastTitle","KEY","LANGUAGE","instance","axios","baseURL","fetchTrendFilms","page","get","response","status","Error","statusText","fetchSearchFilms","searchQuery","fetchInfoAboutFilm","idFilm","fetchReviewsFilm"],"sourceRoot":""}