{"version":3,"file":"static/js/455.8fe7ff7c.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.js","components/TrendFilms/MovieInfo.styled.js","pages/MovieInfo.jsx","service/api/fetchFilms.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const Btn = styled.button`\n  transform: scale(1);\n  cursor: pointer;\n  padding: 10px;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n  color: white;\n  background-color: #5e475c;\n  border: none;\n  border-radius: 10px 10px 0 0;\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  :hover {\n    /* transform: scale(1.05); */\n    color: #f2f2f2;\n    /* background-color: #91778e; */\n    background-color: #91778e;\n  }\n`;\n\nexport const Linked = styled(NavLink)`\n  cursor: default;\n  &.active {\n    color: #f1962e;\n\n    button {\n      color: white;\n      background-color: #8978a3;\n    }\n  }\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  display: flex;\n  justify-content: space-between;\n  gap: 20px;\n  flex-wrap: wrap;\n`;\n\nexport const CastTitle = styled.h1`\n  color: white;\n`;\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\nimport { BiArrowBack } from 'react-icons/bi';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px;\n  background: #0f2027; /* fallback for old browsers */\n  background: -webkit-linear-gradient(\n    to right,\n    #0f2027,\n    #203a43,\n    #2c5364\n  ); /* Chrome 10-25, Safari 5.1-6 */\n  background: linear-gradient(\n    to right,\n    #0f2027,\n    #203a43,\n    #2c5364\n  ); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+ */\n  width: 100%;\n  min-height: 100vh;\n`;\n\nexport const Wrapper = styled.div`\n  padding-top: 25px;\n  padding-right: 25px;\n  padding-bottom: 25px;\n  display: flex;\n  align-items: flex-end;\n\n  background: rgba(176, 130, 171, 0.15);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(1px);\n  -webkit-backdrop-filter: blur(1px);\n  border: 1px solid rgba(255, 255, 255, 0.18);\n`;\n\nexport const WrapperBtn = styled.div`\n  margin-top: 20px;\n  display: flex;\n  align-items: flex-end;\n`;\n\nexport const WrapperOutlet = styled.div`\n  /* padding-top: 25px; */\n  padding-right: 25px;\n  /* padding-bottom: 25px; */\n  display: flex;\n  align-items: flex-end;\n\n  background: rgba(176, 130, 171, 0.15);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(1px);\n  -webkit-backdrop-filter: blur(1px);\n  border: 1px solid rgba(255, 255, 255, 0.18);\n`;\n\nexport const Image = styled.img`\n  height: 540px;\n  margin-left: 20px;\n`;\n\nexport const Desc = styled.div`\n  margin-left: 20px;\n  color: white;\n  font-weight: 500;\n`;\n\nexport const TextWrap = styled.span`\n  color: orange;\n`;\n\nexport const Title = styled.h1`\n  color: orange;\n`;\n\nexport const BackBtn = styled(NavLink)`\n  transform: scale(1);\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  background: rgba(248, 246, 248, 0.25);\n  box-shadow: 0 8px 32px 0 rgba(31, 38, 135, 0.37);\n  backdrop-filter: blur(1px);\n  -webkit-backdrop-filter: blur(1px);\n  border: 1px solid rgba(255, 255, 255, 0.18);\n\n  display: flex;\n  justify-content: center;\n  text-align: center;\n  align-items: center;\n  border-radius: 5px;\n  width: 45px;\n  height: 45px;\n  margin: 20px 20px 20px 0;\n  text-decoration: none;\n\n  transition: transform 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const IconBack = styled(BiArrowBack)`\n  width: 32px;\n  height: 32px;\n  fill: white;\n  transition: fill 1s cubic-bezier(0.175, 0.885, 0.32, 1.275);\n  &:hover {\n    fill: orange;\n  }\n`;\n","import { Outlet, useParams, useLocation } from 'react-router-dom';\n// import Loader from 'components/Loader/Loader';\nimport { useState, useEffect, Suspense } from 'react';\n\nimport { contentURL, fetchInfoAboutFilm } from 'service/api/fetchFilms';\n\nimport {\n  Wrapper,\n  Image,\n  Desc,\n  TextWrap,\n  Title,\n  BackBtn,\n  Container,\n  WrapperBtn,\n  WrapperOutlet,\n  IconBack,\n} from 'components/TrendFilms/MovieInfo.styled';\nimport { Btn, Linked } from 'components/Cast/Cast.styled';\n\nconst MovieInfo = () => {\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n  const { id } = useParams();\n  const [movies, setMovies] = useState('');\n\n  useEffect(() => {\n    async function getFilm(id) {\n      try {\n        const { data } = await fetchInfoAboutFilm(id);\n        setMovies(data);\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    getFilm(id);\n  }, [id]);\n\n  const { title, overview, genres, release_date, vote_average, poster_path } =\n    movies;\n\n  return (\n    <Container>\n      <BackBtn to={backLinkHref}>\n        <IconBack />\n      </BackBtn>\n      {movies && (\n        <section>\n          <Wrapper>\n            <Image\n              src={\n                poster_path === null\n                  ? 'https://i.postimg.cc/MTBLYYMP/poster-not-available.jpg'\n                  : contentURL + poster_path\n              }\n              alt={title}\n            />\n            <Desc>\n              <Title>{title}</Title>\n              <p>{overview}</p>\n\n              <p>\n                <TextWrap>Genres: </TextWrap>\n                {genres.map(gen => gen.name).join(', ')}\n              </p>\n              <p>\n                <TextWrap>Release Date:</TextWrap> {release_date}\n              </p>\n              <p>\n                <TextWrap>Rating:</TextWrap> {vote_average.toFixed(1)}\n              </p>\n            </Desc>\n          </Wrapper>\n          <WrapperBtn>\n            <Linked to=\"cast\" state={{ from: backLinkHref }}>\n              <Btn>Cast</Btn>\n            </Linked>\n            <Linked to=\"reviews\" state={{ from: backLinkHref }}>\n              <Btn>Reviews</Btn>\n            </Linked>\n          </WrapperBtn>\n          <WrapperOutlet>\n            <Suspense fallback={null}>\n              <Outlet />\n            </Suspense>\n          </WrapperOutlet>\n        </section>\n      )}\n    </Container>\n  );\n};\nexport default MovieInfo;\n","import axios from 'axios';\n\nconst KEY = '07f482c2b5e827c5b265fd8211004d21';\nconst LANGUAGE = 'uk';\n\nexport const contentURL = 'https://image.tmdb.org/t/p/w500';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n});\n\nexport async function fetchTrendFilms(page = 1) {\n  try {\n    const response = await instance.get(\n      `/trending/movie/week?api_key=${KEY}&page=${page}&language=uk`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchSearchFilms(searchQuery, page = 1) {\n  try {\n    const response = await instance.get(\n      `/search/movie?api_key=${KEY}&query=${searchQuery}&page=${page}&language=${LANGUAGE}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchInfoAboutFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}?api_key=${KEY}&language=${LANGUAGE}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchCreditsFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}/credits?api_key=${KEY}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function fetchReviewsFilm(idFilm) {\n  try {\n    const response = await instance.get(\n      `/movie/${idFilm}/reviews?api_key=${KEY}`\n    );\n    if (response.status === 200) return response;\n    throw new Error(response.statusText);\n  } catch (error) {\n    console.log(error);\n  }\n}\n"],"names":["Btn","styled","Linked","NavLink","CastList","CastTitle","Container","Wrapper","WrapperBtn","WrapperOutlet","Image","Desc","TextWrap","Title","BackBtn","IconBack","BiArrowBack","backLinkHref","useLocation","state","from","id","useParams","useState","movies","setMovies","useEffect","fetchInfoAboutFilm","data","console","log","getFilm","title","overview","genres","release_date","vote_average","poster_path","to","src","contentURL","alt","map","gen","name","join","toFixed","Suspense","fallback","KEY","LANGUAGE","instance","axios","baseURL","fetchTrendFilms","page","get","response","status","Error","statusText","fetchSearchFilms","searchQuery","idFilm","fetchCreditsFilm","fetchReviewsFilm"],"sourceRoot":""}